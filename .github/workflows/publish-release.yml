name: Build and Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List src directory contents
        run: ls -R ./src

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore ./src/AustralianElectorates.sln

      - name: Build solution
        run: dotnet build ./src/AustralianElectorates.sln --configuration Release --no-restore

      - name: Publish artifacts
        run: dotnet publish ./src/AustralianElectorates.sln --configuration Release --output ./output -p:TargetFramework=net9.0

      - name: List output directory
        run: ls -R ./output

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ./output/AustralianElectorates.dll

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Get commit messages since last tag
        id: changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^)
          echo "Last tag: $LAST_TAG"
          COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"%s")
          echo "Commits since last tag:\n$COMMITS"
          echo "changelog=$COMMITS" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: ${{ env.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/AustralianElectorates.dll
          asset_name: AustralianElectorates.dll
          asset_content_type: application/octet-stream